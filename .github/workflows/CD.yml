# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_run:
    workflows: ["build"]
    types: [requested]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CD_SERVER_KEY }}
          known_hosts: 67.207.78.240
      
      - name: Server Oprations
        uses: appleboy/ssh-action@master
        with:
          host: 67.207.78.240
          port: 22
          username: root
          key: ${{secrets.CD_SERVER_KEY}}
          script: |
            cd /var/www/html/vendor 
            mkdir -p forter
            chown www-data:www-data -R ./forter
      - name: Deploy with Plugin
        run: rsync -avz ./ root@$67.207.78.240:/var/www/html/vendor/forter
      # Runs a single command using the runners shell
      - name: Server Oprations
        uses: appleboy/ssh-action@master
        with:
          host: 67.207.78.240
          port: 22
          username: root
          key: ${{secrets.CD_SERVER_KEY}}
          script: |
            cd /var/www/html 
            chown www-data:www-data -R ./vendor/forter
            php bin/magento maintenance:enable
            php bin/magento setup:upgrade
            php bin/magento setup:di:compile
            php bin/magento setup:static-content:deploy
            php bin/magento maintenance:disable
            php bin/magento cache:flush 
